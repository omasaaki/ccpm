services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ccpm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ccpm}
      POSTGRES_USER: ${POSTGRES_USER:-ccpm_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ccpm_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=ja_JP.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/migrations:/migrations
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    networks:
      - ccpm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ccpm_user} -d ${POSTGRES_DB:-ccpm}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ccpm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
      - ./database/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT:-6380}:6379"
    networks:
      - ccpm-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: ccpm-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://${POSTGRES_USER:-ccpm_user}:${POSTGRES_PASSWORD:-ccpm_password}@postgres:5432/${POSTGRES_DB:-ccpm}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-token-secret}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-32-byte-encryption-key-here-1234}
      CORS_ORIGIN: ${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - ./backend/logs:/app/logs
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    networks:
      - ccpm-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: ccpm-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${BACKEND_URL:-http://localhost:3001}
      VITE_APP_NAME: CCPM
      VITE_APP_VERSION: 1.0.0
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    networks:
      - ccpm-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: ccpm-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html
    networks:
      - ccpm-network
    depends_on:
      - backend
      - frontend
    profiles:
      - production

  # Database Administration (Development)
  adminer:
    image: adminer:latest
    container_name: ccpm-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    networks:
      - ccpm-network
    depends_on:
      - postgres
    profiles:
      - development

  # Redis Commander (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ccpm-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_password}
    ports:
      - "${REDIS_COMMANDER_PORT:-8081}:8081"
    networks:
      - ccpm-network
    depends_on:
      - redis
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  ccpm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16